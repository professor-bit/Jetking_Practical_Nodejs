2) Create a Node.js file that renames the existing file name with
new file name using the File System module. 


Ans. 


const fs = require('fs');


// Specify the existing file name and the new file name
const existingFileName = 'existing_file.txt';
const newFileName = 'new_file.txt';


// Rename the file
fs.rename(existingFileName, newFileName, (err) => {
  if (err) {
    console.error('Error renaming file:', err);
  } else {
    console.log('File renamed successfully!');
  }
});


In this script:
* We first import the fs module, which provides file system-related functionality.
* We specify the names of the existing file (existing_file.txt) and the new file (new_file.txt).
* We use the fs.rename() method to rename the existing file to the new file name. The method takes three arguments: the current file name, the new file name, and a callback function that is called once the renaming operation is complete. If an error occurs during the renaming process, it will be passed to the callback function.
Make sure to replace 'existing_file.txt' and 'new_file.txt' with the actual file names and paths as per your requirement.